version: '3.3'

services:
  app: &app
    build: .
    env_file:
      - docker-compose.env
    depends_on:
      - db
      - redis

    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: >
      bash -c "python manage.py runserver 0.0.0.0:8000 --nostatic"

  migrate:
    <<: *app
    command: ./manage.py migrate
    ports: []
    depends_on:
      - app

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=db
    ports:
     - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:5.0.3-alpine

  celery:
    build: .
    command: celery -A config.celery_app worker -l info
    env_file:
      - docker-compose.env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    build: .
    command: celery -A config.celery_app beat -l info
    env_file:
      - docker-compose.env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - app
